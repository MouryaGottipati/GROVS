package com.grovs.service;

import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.function.Function;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.grovs.model.Category;
import com.grovs.model.Product;
import com.grovs.model.RootCategory;

@Service
public class HomeService {
	
	public TreeSet<Product> mapCategoriesToProducts(int categoryId,Set<Product> productsSet){
		
		return productsSet.parallelStream()
				.filter(product->product.getCategoryId()==categoryId)
				.collect(Collectors.toCollection(()->new TreeSet<>()));
	}
	public Set<RootCategory> iterateRootCatogory(Set<RootCategory> rootCategoryList,Set<Product> productsSet){
		rootCategoryList.stream().parallel()
		.map(categorySet->categorySet.getCategories())
		.collect(Collectors.toMap(category->category.getId(), productsSet.parallelStream()
				.filter(product->product.getCategoryId()==i)
				.collect(Collectors.toCollection(()->new TreeSet<>()))));
		//.collect(Collectors.groupingBy(product.getId(),product));//(category)->{mapCategoriesToProducts(category, productsSet);}
		return null;
		
	}
	
}
